name: Deploy on Comment

on:
  issue_comment:
    types: [created]

jobs:
  deploy:
    name: Deploy
    if: github.event.issue.pull_request && contains(github.event.comment.body, '/deploy') && github.event.comment.author_association == 'OWNER'
    runs-on: ubuntu-22.04

    steps:
      - name: Get PR branch
        uses: xt0rted/pull-request-comment-branch@v1
        id: comment-branch

      - name: Set latest commit status as pending
        uses: myrotvorets/set-commit-status-action@master
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: pending

      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.comment-branch.outputs.head_ref }}

      - name: Create deploy placeholder comment
        id: dep_comment
        uses: actions/github-script@v6
        with:
          script: |
            const name = 'Deploy status';
            const { data: c } = await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `${name}: starting…`
            })
            core.setOutput('id', c.id)
            core.setOutput('url', c.html_url)

      - name: Docker meta
        uses: docker/metadata-action@v5
        id: meta
        env:
          COMMENT_URL: ${{ steps.dep_comment.outputs.url }}
        with:
          images: |
            ghcr.io/serogaq/3x-ui
          tags: |
            type=raw,value=deploy-${{ github.run_id }}
          labels: |
            "org.opencontainers.image.description=${{ env.COMMENT_URL }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: |
            BUILD_WITH_ANTIZAPRET=${{ vars.BUILD_WITH_ANTIZAPRET }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Set latest commit status as ${{ job.status }}
        uses: myrotvorets/set-commit-status-action@master
        if: always()
        with:
          sha: ${{ steps.comment-branch.outputs.head_sha }}
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}

      - name: Finalize deploy comment
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const id = Number('${{ steps.dep_comment.outputs.id }}')
            const name = 'Deploy status';
            const url = '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}';
            const success = '${{ job.status }}' === 'success';
            const body = `${name}: ${success ? "succeeded ✅\nTag: deploy-${{ github.run_id }}" : "failed ❌\n" + url}`;

            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: id,
              body
            })